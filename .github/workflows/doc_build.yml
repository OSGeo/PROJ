name: Docs

on: [push, pull_request]

jobs:
  plots:
    name: Plots
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PROJ build dependencies
        run: |
            DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends -o APT::Immediate-Configure=0  \
                cmake g++ sqlite3 pkg-config libsqlite3-dev libtiff-dev libcurl4-openssl-dev

      - name: Build PROJ
        run: |
            mkdir build
            cd build
            cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=/opt/proj
            make -j$(nproc)
            sudo mkdir -p /opt/proj
            sudo make install
            cd ..

      - name: Install plot dependencies
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: docs/plot/environment.yml

      - name: Plot
        working-directory: ./docs/plot
        run: |
            export PATH=/opt/proj/bin:$PATH
            export PROJ_LIB=/opt/proj/share/proj
            ./plot.py plotdefs.json images/

      - uses: actions/upload-artifact@v2
        with:
          name: Images
          path: docs/plot/images

  docs:
    name: Docs

    needs: [plots]

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    container: osgeo/proj-docs

    steps:
    - uses: actions/checkout@v2
    - name: Print versions
      shell: bash -l {0}
      run: |
          python3 --version
          sphinx-build --version
          python3 -m pip list --not-required --format=columns

    - uses: actions/download-artifact@v2
      name: Images
      with:
        name: Images
        path: ./docs/source/operations/projections/images
    - name: Lint .rst files
      shell: bash -l {0}
      run: |
        if find . -name '*.rst' | xargs grep -P '\t'; then echo 'Tabs are bad, please use four spaces in .rst files.'; false; fi
      working-directory: ./docs
    - name: Doxygen
      shell: bash -l {0}
      run: |
        mkdir -p docs/build
        doxygen Doxyfile
    - name: HTML
      shell: bash -l {0}
      run: |
        make html
      working-directory: ./docs
    - name: PDF
      shell: bash -l {0}
      run: |
        make latexpdf
      working-directory: ./docs
    - name: Spelling
      shell: bash -l {0}
      run: |
        make spelling
      working-directory: ./docs
    - uses: actions/upload-artifact@v2
      with:
        name: PDF
        path: docs/build/latex/proj.pdf
    - uses: actions/upload-artifact@v2
      with:
        name: HTML
        path: docs/build/html/*
    - uses: actions/upload-artifact@v2
      with:
        name: Misspelled
        path: docs/build/spelling/output.txt

